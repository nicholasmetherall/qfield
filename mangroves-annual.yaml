kind: Workflow
metadata:
  generateName: mangroves-
  namespace: argo
spec:
  entrypoint: loop-map-mangroves
  serviceAccountName: argo-workflow-sa
  podGC:
    strategy: OnPodSuccess
    deleteDelayDuration: 30s
  parallelism: 100
  nodeSelector:
    digitalearthpacific.org/node-purpose: argo
  tolerations:
  - key: digitalearthpacific.org/node-purpose
    operator: Equal
    value: argo
    effect: NoSchedule
  - key: kubernetes.azure.com/scalesetpriority
    operator: Equal
    value: spot
    effect: NoSchedule
  arguments:
    parameters:
    - name: version
      value: "0.0.3"  # The version of the data product being made
    - name: image-tag
      value: "0.0.2-4-g598c4bf"  # The Docker image and code version
  templates:
  - name: loop-map-mangroves
    dag:
      tasks:
        - name: generate-ids
          template: generate
          arguments:
            parameters:
              - name: regions
                value: "ALL"  # Comma separated list "FJ,TO" or 'ALL'
              - name: limit
                value: "999"
              - name: year
                value: "2022"  # One year "2022", or a period "2020-2021"
              - name: version
                value: "{{ workflow.parameters.version }}"

        - name: process-id
          depends: generate-ids.Succeeded
          template: process-mangroves-tile
          arguments:
            parameters:
            - name: region-code
              value: "{{item.region-code}}"
            - name: region-index
              value: "{{item.region-index}}"
            - name: year
              value: "{{item.datetime}}"
            - name: version
              value: "{{ workflow.parameters.version }}"
          withParam: "{{ tasks.generate-ids.outputs.result }}"

  - name: generate
    inputs:
      parameters:
      - name: regions
      - name: limit
      - name: year
      - name: version
    container:
      image: "ghcr.io/digitalearthpacific/dep-mangroves:{{ workflow.parameters.image-tag }}"
      imagePullPolicy: IfNotPresent
      resources:
        requests: 
          memory: 100Mi
          cpu: 1.0
      command: [ python ]
      args:
        - src/print_tasks.py
        - --regions
        - "{{ inputs.parameters.regions }}"
        - --datetime
        - "{{ inputs.parameters.year }}"
        - --version
        - "{{ inputs.parameters.version }}"
        - --limit
        - "{{ inputs.parameters.limit }}"
      env:
        - name: AZURE_STORAGE_ACCOUNT
          valueFrom:
            secretKeyRef:
              name: deppcpublicstorage
              key: AZURE_STORAGE_ACCOUNT
        - name: AZURE_STORAGE_SAS_TOKEN
          valueFrom:
            secretKeyRef:
              name: deppcpublicstorage
              key: AZURE_STORAGE_SAS_TOKEN

  - name: process-mangroves-tile
    inputs:
      parameters:
      - name: region-code
      - name: region-index
      - name: year
      - name: version
    container:
      image: "ghcr.io/digitalearthpacific/dep-mangroves:{{ workflow.parameters.image-tag }}"
      imagePullPolicy: IfNotPresent
      resources:
        requests: 
          memory: 50Gi
          cpu: 5.0
        limits:
          cpu: 8.0
          memory: 60Gi
      command: [ python ]
      args:
        - src/run_task.py
        - --region-code
        - "{{ inputs.parameters.region-code }}"
        - --region-index
        - "{{ inputs.parameters.region-index }}"
        - --datetime
        - "{{ inputs.parameters.year }}"
        - --version
        - "{{ inputs.parameters.version }}"
        - --local-cluster-kwargs
        # - "{'memory_limit':'45GiB'}"
        - "{'n_workers': 1, 'threads_per_worker': 16, 'memory_limit':'50GiB'}"
      env:
        - name: AZURE_STORAGE_ACCOUNT
          valueFrom:
            secretKeyRef:
              name: deppcpublicstorage
              key: AZURE_STORAGE_ACCOUNT
        - name: AZURE_STORAGE_SAS_TOKEN
          valueFrom:
            secretKeyRef:
              name: deppcpublicstorage
              key: AZURE_STORAGE_SAS_TOKEN